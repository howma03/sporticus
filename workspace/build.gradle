import groovy.json.JsonBuilder

group 'com.sporticus'
version '1.0-SNAPSHOT'

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // classpath 'io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE"
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
        classpath "com.eriwen:gradle-js-plugin:1.12.1"
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: "com.eriwen.gradle.js"

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
    imports {
        // http://platform.spring.io/platform/
        // https://repo.spring.io/libs-milestone/io/spring/platform/platform-bom/

        // mavenBom 'io.spring.platform:platform-bom:Athens-RELEASE'
        // mavenBom 'io.spring.platform:platform-bom:Athens-SR1'
        // mavenBom 'io.spring.platform:platform-bom:Athens-SR2'
        // mavenBom 'io.spring.platform:platform-bom:Athens-SR3'
	   //  mavenBom 'io.spring.platform:platform-bom:Athens-SR5'
        // mavenBom 'io.spring.platform:platform-bom:Athens-BUILD-SNAPSHOT'
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR5'
	    // mavenBom 'io.spring.platform:platform-bom:Brussels-BUILD-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-security'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.8'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.8'

    compile 'javax.servlet:jstl:1.2'
    compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
//	compile 'org.springframework.session:spring-session:1.0.0.RELEASE'
//	compile 'org.springframework.data:spring-data-redis:2.0.1.RELEASE'
//	compile 'redis.clients:jedis:2.9.0'

	// compile 'mysql:mysql-connector-java:6.0.5'
	compile 'mysql:mysql-connector-java:5.1.39'

	// Mail related
    compile 'org.apache.velocity:velocity:1.7'
    compile 'com.amazonaws:aws-java-sdk:1.8.3'
    compile 'javax.mail:mail:1.4.7'
    compile 'javax.mail:javax.mail-api:1.5.5'

    // Version file related
    compile 'com.googlecode.json-simple:json-simple:1.1.1'

    //client webjars
    compile 'org.webjars:jquery:3.0.0-alpha1'
    compile 'org.webjars:sockjs-client:1.0.0'
    compile 'org.webjars:stomp-websocket:2.3.3'
    compile 'org.webjars:angularjs:1.3.14'

    compile project (':util')
    compile project (':domain')
    //compile project (':web-client-angular')

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'junit:junit:4.12'
}

ext {
	buildStartTime = new Date().getTime()
	buildNo = System.getenv("versionString") != null ? System.getenv("versionString") : "0.0.0"
}

task versionInfo {
    def builder = new JsonBuilder()
    builder(versionString: project.buildNo, buildTime: project.buildStartTime)
    File versionFile = file('version.json')
    versionFile.createNewFile()
    versionFile.write(builder.toString(), 'UTF-8')
}


task copyVersionFile(type: Copy, dependsOn: versionInfo) {
	from 'version.json'
	into 'src/main/webapp/WEB-INF'
}
war {
	webInf {
		from (project(':web-client-angular').file('dist')) {
			into 'app'
		}
	}
}
war.dependsOn copyVersionFile
war.dependsOn(':web-client-angular:build')

subprojects {
	if (it.name != 'web-client-angular') {
		buildscript {
			repositories {
				jcenter()
			}
			dependencies {
				// classpath 'io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE'
				classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE"
				classpath 'org.springframework:springloaded:1.2.6.RELEASE'
				classpath "com.eriwen:gradle-js-plugin:1.12.1"
			}
		}

		apply plugin: 'io.spring.dependency-management'
		apply plugin: 'findbugs'
		apply plugin: 'java'
		apply plugin: 'idea'

		dependencyManagement {
			imports {
				mavenBom 'io.spring.platform:platform-bom:Brussels-RC1'
			}
		}

		repositories {
			mavenCentral()
			maven { url 'https://repo.spring.io/libs-milestone' }
		}

		findbugs {
			ignoreFailures = true
		}
	}
}

//frontend:build will be run before the processResources
processResources.dependsOn('web-client-angular:build')

jar {
	from ('web-client-angular/dist/') {
		//Public is a default supported Spring Boot resources directory.
		into 'public'
	}
}


findbugs {
    ignoreFailures = true
}
